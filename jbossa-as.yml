---
- name: Install and configure jboss-as on centOS
  hosts: centos
  remote_user: ansible
  become: yes
  become_method: sudo
  gather_facts: no

  vars_prompt:
    - name: "location"
      prompt: "Ou voulez vous installer Jboss AS ? un dossier jboss-as sera cree"
      private: no

    - name: "httpport"
      prompt: "Indiquez le port découte http pour cette installation"
      private: no

    - name: "httpsport"
      prompt: "Indiquez le port découte https pour cette installation"
      private: no

    - name: "managementport"
      prompt: "Indiquez le port de l'interface de management pour cette installation"
      private: no

  tasks:
    - name: send jboss-as
      unarchive:
        src: /etc/ansible/roles/files/jboss-as-7.1.3.Final.zip
        dest: "{{ location }}"

    - name: create directory Java (/usr/java)
      file:
        path: /usr/java
        state: directory
        mode: 0755

    - name: unarchive jdk
      unarchive:
        src: /etc/ansible/roles/files/jdk-7u80-linux-x64.tar.gz
        dest: /usr/java

    - name: check jboss as directory name
      stat:
        path: "{{ location }}/jboss-as-7.1.3.Final"
      register: p

    - name: rename directory jboss-as
      shell: 'mv "{{ location }}/jboss-as-7.1.3.Final" "{{ location }}/jboss-as"'
      when: p.stat.exists == True
      
    - name:  create group jboss on Centos
      group:
        name: jboss

    - name: create user jboss on Centos
      user:
        name: jboss
        group: jboss
        home: "{{ location }}/jboss-as"

    - name: give JAVA_HOME to jboss build script
      blockinfile:
        dest: "{{ location }}/jboss-as/build.sh"
        insertafter: "#!/bin/sh" 
        content: "JAVA_HOME=/usr/java/jdk1.7.0_80 \n
          export JAVA_HOME \n 
          PATH=$PATH:$JAVA_HOME \n
          export PATH \n"

    - name: increase memory limit for build (1280Mio)
      lineinfile:
        path="{{ location }}/jboss-as/build.sh"
        regexp='^MAVEN_OPTS='
        line='MAVEN_OPTS="$MAVEN_OPTS -Xmx1280M"'

    - name: build it (may take a long time, about 30 min)
      shell: '"{{ location }}/jboss-as/build.sh" -Dmaven.test.skip=true'
    
    - name: change ownership of jboss-as
      file:
        path: "{{ location }}/jboss-as"
        owner: jboss
        group: jboss
        state: directory
        recurse: yes

    - name: give JAVA_HOME to the standalone script
      blockinfile:
        dest: "{{ location }}/jboss-as/build/target/jboss-as-7.1.3.Final/bin/standalone.sh"
        insertafter: "#!/bin/sh"
        content: "JAVA_HOME=/usr/java/jdk1.7.0_80 \n
          export JAVA_HOME \n
          PATH=$PATH:$JAVA_HOME \n
          export PATH \n"

    - name: set http port
      lineinfile:
        path="{{ location }}/jboss-as/build/target/jboss-as-7.1.3.Final/standalone/configuration/standalone.xml"
        regexp='<socket-binding name="http" '
        line='        <socket-binding name="http" port="{{ http_port }}"/>'

    - name: set https port
      lineinfile:
        path="{{ location }}/jboss-as/build/target/jboss-as-7.1.3.Final/standalone/configuration/standalone.xml"
        regexp='<socket-binding name="https" '
        line='        <socket-binding name="https" port="{{ https_port }}"/>'

    - name: set http management port
      lineinfile:
        path="{{ location }}/jboss-as/build/target/jboss-as-7.1.3.Final/standalone/configuration/standalone.xml"
        regexp='<socket-binding name="management-http" interface="management" '
        line='        <socket-binding name="management-http" interface="management" port="${jboss.management.http.port:{{ management_port }}}"/>'

    - name: create a systemctl service
      blockinfile:
        dest: /etc/systemd/system/jboss.service
        create: yes
        block: |
          [Unit]
          Description=Jboss Application Server

          [Service]
          Type=forking
          User=jboss
          ExecStart="{{ location }}/jboss-as/build/target/jboss-as-7.1.3.Final/bin/standalone.sh"
          RemainAfterExit=True
          KillMode=process

          [Install]
          WantedBy=multi-user.target

    - name: manage service jboss
      shell: "{{ item }}"
      with_items:
        - systemctl daemon-reload
        - systemctl enable jboss.service    
        - systemctl start jboss.service
